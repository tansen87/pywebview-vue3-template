{
  "name": "pywebview-toolkit",
  "private": true,
  "version": "1.0.0",
  "description": "pywebview-toolkit是一款基于pywebview和PyInstaller框架,构建macOS和windows平台客户端的应用框架。本框架的视图层支持Vue、React、Angular、HTML中的任意一种,业务层采用本地Python+调用远程API。",
  "author": "tansen",
  "scripts": {
    "initComments": "清空缓存,配置环境",
    "init": "pnpm run clean && pnpm install && pnpm run initInstall",
    "clean": "pnpm add -D shx && shx rm -rf build src/dist src/node_modules src/pnpm-lock.yaml src_py/pyenv src_py/spec/macos* src_py/spec/windows* && pnpm prune",
    "initInstall": "run-script-os",
    "initInstall:macos": "pnpm -C ./src install && python3 -m venv src_py/pyenv && ./src_py/pyenv/bin/python -m pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple && ./src_py/pyenv/bin/pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r ./src_py/requirements.txt && ./src_py/pyenv/bin/python ./src_py/package/exe/getAppISSID.py",
    "initInstall:windows": "pnpm -C .\\src install && python -m venv src_py\\pyenv\\pyenv && .\\src_py\\pyenv\\pyenv\\Scripts\\python -m pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple && .\\src_py\\pyenv\\pyenv\\Scripts\\pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r .\\src_py\\requirements.txt && .\\src_py\\pyenv\\pyenv\\Scripts\\python .\\src_py\\package\\exe\\getAppISSID.py",
    "initcefComments": "清空缓存,配置CEF环境",
    "init:cef": "pnpm install && pnpm -C .\\src install && python -m venv src_py\\pyenv\\pyenvCEF && .\\src_py\\pyenv\\pyenvCEF\\Scripts\\python -m pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple && .\\src_py\\pyenv\\pyenvCEF\\Scripts\\pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r .\\src_py\\requirements.txt && .\\src_py\\pyenv\\pyenvCEF\\Scripts\\pip install -i https://pypi.tuna.tsinghua.edu.cn/simple cefpython3 && .\\src_py\\pyenv\\pyenvCEF\\Scripts\\python .\\src_py\\package\\exe\\getAppISSID.py",
    "startComments": "开发环境",
    "start": "run-p dev startos",
    "devComments": "开发环境-前端",
    "dev": "pnpm -C ./src run dev",
    "startosComments": "开发环境-客户端",
    "startos": "run-script-os",
    "startos:macos": "nodemon --config ./src_py/nodemon.json --exec ./src_py/pyenv/bin/python -X dev ./main.py",
    "startos:windows": "nodemon --config .\\src_py\\nodemon.json --exec .\\src_py\\pyenv\\pyenv\\Scripts\\python -X dev .\\main.py",
    "startcefComments": "开发环境-cef模式",
    "start:cef": "run-p dev startcef",
    "startcef": "nodemon --config .\\src_py\\nodemon.json --exec .\\src_py\\pyenv\\pyenvCEF\\Scripts\\python -X dev .\\main.py --cef",
    "preComments": "预打包（带日志输出）",
    "pre": "shx rm -rf build && pnpm -C ./src run build && run-script-os",
    "pre:macos": "./src_py/pyenv/bin/python src_py/spec/getSpec.py --mac && ./src_py/pyenv/bin/pyinstaller --clean ./src_py/spec/macos-pre.spec",
    "pre:windows": ".\\src_py\\pyenv\\pyenv\\Scripts\\python src_py\\spec\\getSpec.py && .\\src_py\\pyenv\\pyenv\\Scripts\\pyinstaller --clean .\\src_py\\spec\\windows-pre.spec",
    "precefComments": "预打包-cef模式",
    "pre:cef": ".\\src_py\\pyenv\\pyenvCEF\\Scripts\\python src_py\\spec\\getSpec.py && shx rm -rf build && pnpm -C ./src run build && .\\src_py\\pyenv\\pyenvCEF\\Scripts\\pyinstaller --clean .\\src_py\\spec\\windows-pre-cef.spec",
    "prefolderComments": "预打包-文件夹模式",
    "pre:folder": ".\\src_py\\pyenv\\pyenv\\Scripts\\python src_py\\spec\\getSpec.py && shx rm -rf build && pnpm -C ./src run build && .\\src_py\\pyenv\\pyenv\\Scripts\\pyinstaller --clean .\\src_py\\spec\\windows-folder-pre.spec",
    "prefoldercefComments": "预打包-cef模式-文件夹模式",
    "pre:folder:cef": ".\\src_py\\pyenv\\pyenvCEF\\Scripts\\python src_py\\spec\\getSpec.py && shx rm -rf build && pnpm -C ./src run build && .\\src_py\\pyenv\\pyenvCEF\\Scripts\\pyinstaller --clean .\\src_py\\spec\\windows-folder-pre-cef.spec",
    "buildComments": "正式打包",
    "build": "shx rm -rf build && shx rm -rf dist && pnpm -C ./src run build && run-script-os && shx rm -rf dist && shx rm -rf build/cache",
    "build:macos": "./src_py/pyenv/bin/python src_py/spec/getSpec.py --mac && ./src_py/pyenv/bin/pyinstaller --clean ./src_py/spec/macos.spec && pnpm run build:dmg",
    "build:dmg": "shx rm -rf build/*.dmg && ./src_py/pyenv/bin/python src_py/package/dmg/getJson.py && appdmg src_py/package/dmg/dmg.json build/setup.dmg && ./src_py/pyenv/bin/python src_py/package/dmg/rename.py",
    "build:windows": ".\\src_py\\pyenv\\pyenv\\Scripts\\python src_py\\spec\\getSpec.py && .\\src_py\\pyenv\\pyenv\\Scripts\\pyinstaller --clean .\\src_py\\spec\\windows.spec && pnpm run build:exe",
    "build:exe": "shx rm -rf build/*_Windows.exe && .\\src_py\\pyenv\\pyenv\\Scripts\\python src_py\\package\\exe\\getIss.py && src_py\\package\\exe\\InnoSetup6\\ISCC.exe src_py\\package\\exe\\InnoSetup.iss",
    "buildcefComments": "正式打包-cef模式",
    "build:cef": ".\\src_py\\pyenv\\pyenvCEF\\Scripts\\python src_py\\spec\\getSpec.py && shx rm -rf build && pnpm -C ./src run build && .\\src_py\\pyenv\\pyenvCEF\\Scripts\\pyinstaller --clean .\\src_py\\spec\\windows-cef.spec && pnpm run build:exe",
    "buildfolderComments": "正式打包-文件夹模式",
    "build:folder": ".\\src_py\\pyenv\\pyenv\\Scripts\\python src_py\\spec\\getSpec.py && shx rm -rf build && pnpm -C ./src run build && .\\src_py\\pyenv\\pyenv\\Scripts\\pyinstaller --clean .\\src_py\\spec\\windows-folder.spec",
    "buildfoldercefComments": "正式打包-cef模式-文件夹模式",
    "build:folder:cef": ".\\src_py\\pyenv\\pyenvCEF\\Scripts\\python src_py\\spec\\getSpec.py && shx rm -rf build && pnpm -C ./src run build && .\\src_py\\pyenv\\pyenvCEF\\Scripts\\pyinstaller --clean .\\src_py\\spec\\windows-folder-cef.spec",
    "alembicComments": "迁移数据库,用法: m=信息备注 pnpm run alembic",
    "alembic": "run-script-os",
    "alembic:macos": "cd ./src_py/db/ && ../pyenv/bin/alembic revision --autogenerate -m \"${m}\" && ../pyenv/bin/alembic upgrade head && ../pyenv/bin/alembic upgrade head --sql > ../../static/db/migration.sql && ../pyenv/bin/alembic current > ../../static/db/version",
    "alembic:windows": "cd ./src_py/db/ && ..\\pyenv\\pyenv\\Scripts\\alembic.exe revision --autogenerate -m \"${m}\" && ..\\pyenv\\pyenv\\Scripts\\alembic.exe upgrade head && ..\\pyenv\\pyenv\\Scripts\\alembic.exe upgrade head --sql > ..\\..\\static\\db\\migration.sql && ..\\pyenv\\pyenv\\Scripts\\alembic.exe current > ..\\..\\static\\db\\version"
  },
  "devDependencies": {
    "nodemon": "^2.0.20",
    "npm-run-all": "^4.1.5",
    "run-script-os": "^1.1.6",
    "shx": "^0.3.4"
  },
  "optionalDependencies": {
    "appdmg": "^0.6.6"
  }
}